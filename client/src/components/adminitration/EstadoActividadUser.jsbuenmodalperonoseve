import React, { useState } from "react";
import { useSelector } from "react-redux";
import { MapContainer, TileLayer, Marker, Popup } from "react-leaflet";
import L from "leaflet";
import "leaflet/dist/leaflet.css";
 
// Fix para íconos de Leaflet
delete L.Icon.Default.prototype._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),
  iconUrl: require('leaflet/dist/images/marker-icon.png'),
  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),
});

// Estilos CSS en el mismo archivo (o puedes moverlos a un .css)
const modalStyle = {
  position: "fixed",
  top: "0",
  left: "0",
  width: "100%",
  height: "100%",
  backgroundColor: "rgba(0, 0, 0, 0.7)",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  zIndex: "1000",
};

const modalContentStyle = {
  backgroundColor: "#fff",
  padding: "20px",
  borderRadius: "8px",
  width: "80%",
  height: "80%",
  overflow: "auto",
};

const EstadoActividadUser = () => {
  const { homeUsers } = useSelector((state) => state);
  const [selectedUser, setSelectedUser] = useState(null);
  const [modalOpen, setModalOpen] = useState(false);

  const handleOpenModal = (user) => {
    setSelectedUser(user);
    setModalOpen(true);
  };

  const handleCloseModal = () => {
    setModalOpen(false);
  };

  return (
    <div className="container mt-4">
      <h2 className="mb-4">👥 Usuarios Activos</h2>
      
      {/* Tabla con Bootstrap (si ya lo usas) */}
      <table className="table table-striped table-bordered">
        <thead className="thead-dark">
          <tr>
            <th>Nombre</th>
            <th>Email</th>
            <th>Acción</th>
          </tr>
        </thead>
        <tbody>
          {homeUsers.users.map((user) => (
            <tr key={user._id}>
              <td>{user.name}</td>
              <td>{user.email}</td>
              <td>
                <button 
                  onClick={() => handleOpenModal(user)}
                  className="btn btn-primary btn-sm"
                >
                  Ver ubicación
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Modal con CSS puro */}
      {modalOpen && (
        <div style={modalStyle} onClick={handleCloseModal}>
          <div 
            style={modalContentStyle} 
            onClick={(e) => e.stopPropagation()} // Evita que el clic en el contenido cierre el modal
          >
            <h3 className="mb-3">
              Ubicación de {selectedUser?.name}
              <button 
                onClick={handleCloseModal}
                style={{
                  float: "right",
                  background: "none",
                  border: "none",
                  fontSize: "1.5rem",
                  cursor: "pointer",
                }}
              >
                &times;
              </button>
            </h3>
            
            {selectedUser?.location ? (
              <MapContainer
                center={[selectedUser.location.lat, selectedUser.location.lng]}
                zoom={15}
                style={{ height: "80%", width: "100%" }}
              >
                <TileLayer
                  url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                  attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                />
                <Marker position={[selectedUser.location.lat, selectedUser.location.lng]}>
                  <Popup>{selectedUser.name}</Popup>
                </Marker>
              </MapContainer>
            ) : (
              <p className="text-danger">Ubicación no disponible</p>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default EstadoActividadUser;